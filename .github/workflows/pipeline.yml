name: Cypress E2E
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: Ambiente (dev/staging/prod)
        type: choice
        default: staging
        options: [dev, staging, prod]

env:
  DASHBOARD_API_URL: ${{ secrets.DASHBOARD_URL }}
  ENVIRONMENT: ${{ github.event.inputs.environment || 'staging' }}

jobs:
  e2e:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cypress run
        uses: cypress-io/github-action@v6
        continue-on-error: true
        with:
          browser: chrome
        env:
          GITHUB_REF_NAME: ${{ github.ref_name }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          DASHBOARD_API_URL: ${{ env.DASHBOARD_API_URL }}
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
          CYPRESS_baseUrl: https://dash-report-cy.netlify.app/
          CYPRESS_DASHBOARD_API_URL: ${{ env.DASHBOARD_API_URL }}

      # Garante a pasta public antes dos artefatos
      - name: Ensure public directory exists
        run: mkdir -p public

      # Garante index.html para permitir deploy Netlify
      - name: Create index.html if missing
        run: |
          test -f public/index.html || echo "<h1>Cypress Artifacts</h1>" > public/index.html

      # Copia artefatos Cypress para pasta pública
      - name: Copy Cypress artifacts to public folder
        run: |
          mkdir -p public/artifacts/screenshots
          mkdir -p public/artifacts/videos
          cp -a cypress/screenshots/. public/artifacts/screenshots/ || true
          cp -a cypress/videos/. public/artifacts/videos/ || true

      # Instale e normalize nomes dos screenshots
      - name: Normalize screenshot filenames
        run: |
          sudo apt-get install -y rename
          find public/artifacts/screenshots -type f -name '*.png' -exec rename 's/ /_/g; s/[áàâãä]/a/g; s/[éèêë]/e/g; s/[íìîï]/i/g; s/[óòôõö]/o/g; s/[úùûü]/u/g; s/[ç]/c/g' {} +
          ls -lR public/artifacts/screenshots

      # (Opcional) Normaliza nomes de vídeos
      - name: Normalize video filenames
        run: |
          find public/artifacts/videos -type f -name '*.mp4' -exec rename 's/ /_/g; s/[áàâãä]/a/g; s/[éèêë]/e/g; s/[íìîï]/i/g; s/[óòôõö]/o/g; s/[úùûü]/u/g; s/[ç]/c/g; s/[^\w.-]//g' {} +
          ls -lR public/artifacts/videos

  deploy:
    needs: e2e
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Build site
        run: echo "No build needed - serving static files"

      # Garante a pasta public e index.html antes do deploy
      - name: Ensure public and index exist
        run: |
          mkdir -p public
          test -f public/index.html || echo "<h1>Cypress Artifacts</h1>" > public/index.html

      # Deployando o conteúdo da pasta 'public'
      - name: Deploy to Netlify
        run: netlify deploy --dir=public --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
