name: Cypress E2E
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: Ambiente (dev/staging/prod)
        type: choice
        default: staging
        options: [dev, staging, prod]
env:
  DASHBOARD_API_URL: ${{ secrets.DASHBOARD_URL }}
  ENVIRONMENT:       ${{ github.event.inputs.environment || 'staging' }}

jobs:
  e2e:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cypress run
        uses: cypress-io/github-action@v6
        continue-on-error: true
        with:
          browser: chrome
        env:
          GITHUB_REF_NAME:   ${{ github.ref_name }}
          GITHUB_SHA:        ${{ github.sha }}
          GITHUB_ACTOR:      ${{ github.actor }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_RUN_ID:     ${{ github.run_id }}
          DASHBOARD_API_URL: ${{ env.DASHBOARD_API_URL }}
          ENVIRONMENT:       ${{ env.ENVIRONMENT }}
          CYPRESS_baseUrl:   https://dash-report-cy.netlify.app/
          CYPRESS_DASHBOARD_API_URL: ${{ env.DASHBOARD_API_URL }}

      # PASSO NOVO: Copiar artefatos para pasta p√∫blica
      - name: Copy Cypress artifacts to public folder
        run: |
          mkdir -p public/artifacts/screenshots
          mkdir -p public/artifacts/videos
          cp -R cypress/screenshots/* public/artifacts/screenshots/ || true
          cp -R cypress/videos/* public/artifacts/videos/ || true

  deploy:
    needs: e2e
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Netlify CLI
        run: npm install -g netlify-cli

      - name: Build site
        run: echo "No build needed - serving static files"

      - name: Deploy to Netlify
        run: netlify deploy --dir=. --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
